<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	<!--放行的页面和资源css,js,img,plugins及其子目录,对其不安全监测-->
	<http pattern="/*.html" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/js/**" security="none"></http>
	<http pattern="/plugins/**" security="none"></http>
	<http pattern="/seller/add.do" security="none"></http><!--得放行商家入驻注册才有账号登录-->
	<!-- 页面拦截规则 是否启动spel表达式-->
	<http use-expressions="false">
		<!--当前用户必须有ROLE_ADMIN的角色才能访问根目录及其子目录的资源-->
		<intercept-url pattern="/**" access="ROLE_SELLER"/><!--管理员-->
		<!--开启表单登录功能,登录页面经过安全框架然后跳转到首页(包括账号或密码错误)-->
		<form-login login-page="/shoplogin.html" default-target-url="/admin/index.html"
					authentication-failure-url="/shoplogin.html" always-use-default-target="true"/><!--默认跳转首页,不返回第一次访问的页面-->
		<csrf disabled="true"/><!--**该框架用了防止跨站攻击的头,现取消-->
		<headers><!--**默认拦截运营商后台页面的资源,关掉-->
			<frame-options policy="SAMEORIGIN"></frame-options>
		</headers>
		<logout></logout><!--注销,跳转的地址默认为登录页面-->

	</http>

	<!--认证管理器,写好几个用户-->
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailService">
			<password-encoder ref="bcryptEncoder"></password-encoder><!--解密-->
		</authentication-provider>
	</authentication-manager>

	<!--认证类-->
	<beans:bean id="userDetailService"
				class="com.pinyougou.service.UserDetailsServiceImpl">
		<beans:property name="sellerService" ref="sellerService" ></beans:property><!--调用服务层-->
	</beans:bean>

	<!-- 引用dubbo 服务 给了用户名后使用注册中心消费者调用提供者去数据库查询有无此用户-->
	<dubbo:application name="pinyougou-shop-web" />
	<dubbo:registry address="zookeeper://192.168.25.142:2181"/>
	<!--相当于代理,看做一个bean-->
	<!--用户名检验,调用服务层-->
	<dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference>
	<!--告知解密的方式Bcrype-->
	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
</beans:beans>